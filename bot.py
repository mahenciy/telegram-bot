import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes

TOKEN = "7667501486:AAF8gkKTV068uZEfiX18dqDxLTr7vGFqzzQ"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø –∫—Ä—É—Ç–æ–π –±–æ—Ç ü§ñ. –ù–∞–ø–∏—à–∏ /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é!")

# /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/start ‚Äî –ó–∞–ø—É—Å–∫\n"
        "/help ‚Äî –ü–æ–º–æ—â—å\n"
        "/fun ‚Äî –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç\n"
        "/echo <—Ç–µ–∫—Å—Ç> ‚Äî –ü–æ–≤—Ç–æ—Ä—é –∑–∞ —Ç–æ–±–æ–π"
    )

# /echo
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if context.args:
        await update.message.reply_text(" ".join(context.args))
    else:
        await update.message.reply_text("–ù–∞–¥–æ —á—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ /echo ü§î")

# /fun
async def fun(update: Update, context: ContextTypes.DEFAULT_TYPE):
    facts = [
        "üê∂ –°–æ–±–∞–∫–∏ —É–º–µ—é—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤—Ä–µ–º—è!",
        "üöÄ –ü–µ—Ä–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –≤ –∫–æ—Å–º–æ—Å–µ ‚Äî –Æ—Ä–∏–π –ì–∞–≥–∞—Ä–∏–Ω.",
        "üß† –ú–æ–∑–≥ —á–µ–ª–æ–≤–µ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –≤–æ —Å–Ω–µ.",
        "üçå –ë–∞–Ω–∞–Ω—ã ‚Äî —ç—Ç–æ —è–≥–æ–¥—ã. –ê –∫–ª—É–±–Ω–∏–∫–∞ ‚Äî –Ω–µ—Ç!",
        "ü™ê –û–¥–∏–Ω –¥–µ–Ω—å –Ω–∞ –í–µ–Ω–µ—Ä–µ –¥–æ–ª—å—à–µ, —á–µ–º –≥–æ–¥."
    ]
    import random
    await update.message.reply_text(random.choice(facts))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("echo", echo))
    app.add_handler(CommandHandler("fun", fun))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
